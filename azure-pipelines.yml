trigger:
- master

variables:
  azureSubscription: '4bd5e7e1-ee4d-46b8-aa3a-93ec09306f42'
  webAppName: 'az007'
  environmentName: 'az007'
  vmImageName: 'ubuntu-latest'
- task: Maven@4
  inputs:
    mavenPomFile: 'pom.xml'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    javaHomeOption: 'JDKVersion'
    mavenVersionOption: 'Default'
    mavenAuthenticateFeed: false
    effectivePomSkip: false
    sonarQubeRunAnalysis: true
    sqMavenPluginVersionChoice: 'latest'
stages:
- stage: Build
  displayName: 'Build Stage'
  jobs:
  - job: MavenPackageAndPublishArtifacts
    displayName: 'Maven Package and Publish Artifacts'
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Maven@4
      displayName: 'Maven Build with Code Analysis'
      inputs:
        mavenPomFile: 'pom.xml'
        goals: 'clean package'
        mavenOptions: '-Xmx3072m'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.17'
        jdkArchitectureOption: 'x64'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        sonarQubeRunAnalysis: true
        sqMavenPluginVersionChoice: 'latest'
        checkStyleRunAnalysis: true
        pmdRunAnalysis: true
        findBugsRunAnalysis: true
        spotBugsRunAnalysis: true

    - task: CopyFiles@2
      displayName: 'Copy WAR file to staging directory'
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)'
        Contents: '**/target/*.?(war|jar)'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish WAR as Artifact'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'

- stage: Deploy
  displayName: 'Deploy Stage'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: DeployLinuxWebApp
    displayName: 'Deploy to Azure Web App'
    environment: $(environmentName)
    pool:
      vmImage: $(vmImageName)
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            displayName: 'Deploy WAR to $(webAppName)'
            inputs:
              azureSubscription: $(azureSubscription)
              appType: webAppLinux
              appName: $(webAppName)
              package: '$(Pipeline.Workspace)/drop/**/*.war'
